/*  
  ==================================
  Media Lists
  ==================================

  finny - HTPC Theme for Jellyin
  Based on: Ultrachromic

*/

/* Affects blurhash to remove the saturated colors to fit overall look */
.blurhash-canvas {
	filter: opacity(60%) saturate(60%);
}

/* Shadows */
.visualCardBox,
.cardImageContainer {
  box-shadow: none;
}


/*
| Lists - Alignments & Size
---------------------------------------*/

/* Main List */
.itemsContainer-tv.vertical-wrap {
  padding-top: 1% !important;
  padding-right: 3% !important; 
  padding-left: 3% !important;
}

/* Scrollable List */
.itemsContainer-tv.scrollSlider {
  padding-top: 1% !important;
  padding-left: 1% !important;
}

/* more space for zoomed cards */
.portraitCard.show-focus.show-animation,
.backdropCard.show-focus.show-animation {
  padding-bottom: 1.5em !important;
}

/* narrow margins */
.cardBox-bottompadded {
  margin-bottom: 0.5em !important;
  margin-right: 1.5em !important;
}

/*
| Item Cards
---------------------------------------*/

/* Portrait Card: Size */
.itemsContainer-tv > .portraitCard {
  width: 16% !important;
}

/* Backdrop Card: Size*/
.itemsContainer-tv > .backdropCard {
  width: 20% !important;
}

/* Overflow Portrait Card: Size */
.itemsContainer-tv > .overflowPortraitCard, 
.itemsContainer-tv > .overflowSquareCard {
  width: 16% !important;
}

/* Overflow Backdrop Card: Size */
.itemsContainer-tv > .overflowBackdropCard {
  width: 30% !important;
}

/* Card Button Container */
.cardPadder {
  background-color: transparent !important;
  box-shadow: none !important;
}

/*
| Item Cards - Image
---------------------------------------*/

/* Full Radius */
.cardContent {
  border-radius: var(--rounding) !important;
}

/* Rounded Top - Flat Bottom with Card Footer present */
/*
.card:has(.cardFooter) .cardImageContainer {
  border-top-left-radius: var(--rounding) !important;
  border-top-right-radius: var(--rounding) !important;
  border-bottom-left-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}
  */
/*
.cardContent:not(.defaultCardBackground) {
    background-color: transparent;
}
    */


    

.cardOverlayContainer,
.cardContent-button, 
.cardContent-shadow,
.cardImage,
.cardOverlayButtonIcon {
  border-radius: var(--rounding);
}


/* Card Image: Bottom Flat if View Mode = Card */
.card:has(.cardFooter) .cardImage,
.card:has(.cardFooter) .cardScalable,
.card:has(.cardFooter) .cardContent,
.card:has(.cardFooter) .cardOverlayContainer {
  border-bottom-left-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

/* Media Card Footer */
.cardFooter:not(.visualCardBox-cardFooter) {
  border-bottom-left-radius: var(--rounding) !important;
  border-bottom-right-radius: var(--rounding) !important;
  background: rgba(0, 0, 0, var(--headeropac)) !important;
}




/*
| Item Cards - Description
---------------------------------------*/

/* Series Title: Padding */
.cardText-first {
  padding-top: .5em !important;
}

/* Secondary Text: Size */
.cardText-secondary {
  font-size: 75% !important;
}

/* Overflow Backdrop Card: Hide Series Title */
.overflowBackdropCard[data-type="Episode"] > .cardBox > .cardText-first {
  display: none;
}

/* Overflow Backdrop Card: Make "S0E0 - Episodename" Bigger */
.overflowBackdropCard[data-type="Episode"] > .cardBox > .cardText-secondary {
  font-size: 100% !important;
  padding-top: .6em !important;
  color: inherit;
}

/* Episode / Year - Remove for Movie Backdrop Cards */
/* > data-type="Episode" > why? 
#moviesPage .backdropCard[data-type="Episode"] > .cardFooter > .cardText-secondary,
#tvRecommendedPage .backdropCard > .cardFooter > .cardText-secondary {
  display: none !important;
} */

/*
| Item Cards - Animations
---------------------------------------*/

/* More Space for Zoom-Animation*/
.itemsContainer > .card > .cardBox {
  margin-left: 0.5em !important;
  margin-right: 2em;
}

/* Zoom on Focus */
.card.show-animation:focus > .cardBox {
  -webkit-transform:scale(1.1);
  transform:scale(1.1);
}

/* Color on Focus */
.card.show-animation:focus > .cardBox > .cardText-first,
.card.show-animation:focus > .cardBox > .cardText-secondary,
.card.show-animation:focus > .cardBox > .cardFooter > .cardText-first,
.card.show-animation:focus > .cardBox > .cardFooter > .cardText-secondary {
  color: rgba(var(--accent));
}

/*
| Item Cards - Indicators
-----------------------------*/

/* Alignment */
.cardIndicators,
.listItemIndicators,
.mediaSourceIndicator {
  right: 0.5em !important;
  top: 0.5em !important;
}

/* Count & Played */
.countIndicator,
.playedIndicator,
.mediaSourceIndicator {
  color: black;
  background: rgb(var(--accent), 0.7) !important;
  border-radius: var(--rounding-input) !important;
}

/* Missing & Unaired */
.missingIndicator,
.unairedIndicator {
  color: #fff;
  background: #ae3030eb;
  padding: .3em .6em;
}

/* Multi Select Checkboxes */
.multiSelectCheckboxOutline {
  border-top-left-radius: var(--rounding) !important;
  border-top-right-radius: var(--rounding-input) !important;
  border-bottom-right-radius: var(--rounding-input) !important;
  border-bottom-left-radius: var(--rounding-input) !important;
}

/*
| Item Cards - Progress Bar
---------------------------------------*/

/* Container */
.innerCardFooter {
  background: transparent !important;
  border-radius: var(--rounding) !important;
}

/* Background */
.itemProgressBar {
  background: var(--dark40) !important;
  border-radius: var(--rounding) !important;
  height: .4em !important;
  margin: .5em .8em !important;
  backdrop-filter: blur(6px);
} 

/* Slider*/
.itemProgressBarForeground {
  background-color: rgba(var(--accent), 0.95) !important;
  border-radius: var(--rounding) !important;
}

/*
| Media Filter
---------------------------------------*/

/* Menu - Text Position */
.emby-collapse > .emby-button.show-focus > .emby-collapsible-title {
  margin-left: 0.5em;
}

/* Menu - Animation */
.emby-collapse > .emby-button.show-focus:focus,
.emby-collapse > .emby-button.show-focus:hover {
  background: rgba(var(--accent),0.8) !important;
  -webkit-transform: none !important;
  transform: none !important;
}

/* Indicator */
.filterIndicator {
  background: rgb(var(--accent), 0.7) !important;
}
